---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: ironics.metal3.io
spec:
  group: metal3.io
  names:
    kind: Ironic
    listKind: IronicList
    plural: ironics
    singular: ironic
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Ironic is the Schema for the ironics API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IronicSpec defines the desired state of Ironic
            properties:
              apiPort:
                default: 6385
                description: APIPort is the public port used for Ironic.
                format: int32
                minimum: 1
                type: integer
              apiSecretName:
                description: APISecretName is the name of the secret with Ironic API
                  credentials.
                type: string
              database:
                description: Database defines database settings for Ironic. Mandatory
                  when size is more than 1.
                properties:
                  credentialsSecretName:
                    description: CredentialsSecretName is the name of the secret with
                      database credentials.
                    type: string
                  externalIP:
                    description: ExternalIP can be set to use an existing MariaDB
                      installation instead of a managed one.
                    type: string
                  image:
                    default: quay.io/metal3-io/mariadb
                    description: Image is the MariaDB image.
                    type: string
                  tlsSecretName:
                    description: TLSSecretName is the name of the secret with the
                      database TLS certificate.
                    type: string
                type: object
              disableVirtualMediaTLS:
                description: DisableVirtualMediaTLS turns off TLS on the virtual media
                  server, which may be required for hardware that cannot accept HTTPS
                  links.
                type: boolean
              image:
                default: quay.io/metal3-io/ironic
                description: Image is the Ironic image (including httpd).
                type: string
              imageServerPort:
                default: 8088
                description: ImageServerPort is the public port used for serving images.
                format: int32
                minimum: 1
                type: integer
              imageServerTLSPort:
                default: 8089
                description: ImageServerTLSPort is the public port used for serving
                  virtual media images over TLS.
                format: int32
                minimum: 1
                type: integer
              inspection:
                description: Inspection defines inspection settings
                properties:
                  collectors:
                    description: Collectors is a list of inspection collectors to
                      enable.
                    items:
                      type: string
                    type: array
                  vlanInterfaces:
                    description: List of interfaces to inspect for VLANs.
                    items:
                      type: string
                    type: array
                type: object
              networking:
                description: Networking defines networking settings for Ironic. At
                  least one of the subfield should be provided.
                properties:
                  bindInterface:
                    description: BindInterface makes Ironic API bound to only one
                      interface.
                    type: boolean
                  externalIP:
                    description: ExternalIP is used for accessing API and the image
                      server from remote hosts.
                    type: string
                  interface:
                    description: Interface is a Linux network device to listen on.
                    type: string
                  macAddresses:
                    description: MACAddresses can be provided to make the start script
                      pick the interface matching any of these addresses.
                    items:
                      type: string
                    type: array
                type: object
              ramdiskSSHKey:
                description: RamdiskSSHKey is the contents of the public key to inject
                  into the ramdisk for debugging purposes.
                type: string
              size:
                description: Size is the desired count of Ironic instances.
                format: int32
                minimum: 1
                type: integer
              tlsSecretName:
                description: TLSSecretName is the name of the secret with the API
                  TLS certificate.
                type: string
            required:
            - apiSecretName
            type: object
          status:
            description: IronicStatus defines the observed state of Ironic
            properties:
              conditions:
                description: Conditions describe the state of the Ironic deployment.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              ironicEndpoint:
                description: IronicEndpoints is the available API endpoints of Ironic.
                items:
                  type: string
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
